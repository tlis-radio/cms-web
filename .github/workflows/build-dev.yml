name: Build Dev Website

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and Push Docker Image
      run: |
        IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/tlis-web-dev:latest
        docker build . \
        --file Dockerfile \
        --tag $IMAGE_NAME \
        --build-arg NEXT_PUBLIC_DIRECTUS_URL=${{ secrets.DEV_DIRECTUS_URL }} 
        docker push $IMAGE_NAME
        
    - name: Deploy to development
      run: |
        curl -X GET "${{ secrets.DEPLOY_URL }}?uuid=${{ secrets.DEV_DEPLOY_ID }}&force=false" \
          -H "Authorization: Bearer ${{ secrets.DEPLOY_SECRET }}"

    - name: Get last successful commit SHA
      id: last_commit
      run: |
        WORKFLOW_FILE="build-dev.yml"
        LAST_RUN_JSON=$(gh api "repos/${{ github.repository }}/actions/workflows/${WORKFLOW_FILE}/runs?status=success&per_page=15")
        LAST_SHA=$(echo "$LAST_RUN_JSON" | jq -r '.workflow_runs[1].head_sha // ""')

        echo "LAST_SHA=$LAST_SHA" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get commit list since last build
      run: |
        git fetch --unshallow
        if [ -n "$LAST_SHA" ]; then
          CHANGES=$(git log --pretty=format:"- %s (%an)" $LAST_SHA..HEAD)
        else
          CHANGES=$(git log -5 --pretty=format:"- %s (%an)")
        fi
        echo "CHANGES<<EOF" >> $GITHUB_ENV
        echo "$CHANGES" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create new Discord forum thread
      run: |
        WEBHOOK_URL="${{ secrets.DISCORD_FORUM_WEBHOOK_URL }}" 
        THREAD_TITLE="Dev Build - $(date -u +"%Y-%m-%d %H:%M UTC")"
        MESSAGE="üöÄ Nov√Ω dev build webstr√°nky!\n**Build Date:** $(date -u +"%Y-%m-%d %H:%M UTC")\n**Latest commits:**\n${CHANGES}\n\nüìù P√≠≈°te feedback do tohto threadu."

        # Escape quotes for JSON
        SAFE_MESSAGE=$(echo "$MESSAGE" | sed 's/"/\\"/g')

        curl -H "Content-Type: application/json" \
          -X POST \
          -d "{\"thread_name\":\"$THREAD_TITLE\",\"content\":\"$SAFE_MESSAGE\"}" \
          "$WEBHOOK_URL"